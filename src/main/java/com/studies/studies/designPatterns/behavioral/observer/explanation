The Observer design pattern is a behavioral design pattern that defines a one-to-many dependency between objects
so that when one object changes state, all its dependents are notified and updated automatically.
This pattern is particularly useful for implementing distributed event-handling systems.

Key Concepts
Subject: The object that holds the state and sends notifications to observers when the state changes.
Observers: The objects that need to be notified of changes in the subject. They register themselves with the subject to receive updates.
Concrete Subject: The concrete implementation of the subject, which maintains the state and notifies observers when the state changes.
Concrete Observers: Concrete implementations of observers that update their state based on notifications received from the subject.